# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import chat_extended_pb2 as chat__extended__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chat_extended_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServerStub(object):
    """Extended chat service definition for fault-tolerant operation
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChatStream = channel.stream_stream(
                '/chat.ChatServer/ChatStream',
                request_serializer=chat__extended__pb2.Id.SerializeToString,
                response_deserializer=chat__extended__pb2.Message.FromString,
                _registered_method=True)
        self.SendCreateAccount = channel.unary_unary(
                '/chat.ChatServer/SendCreateAccount',
                request_serializer=chat__extended__pb2.CreateAccount.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.SendLogin = channel.unary_unary(
                '/chat.ChatServer/SendLogin',
                request_serializer=chat__extended__pb2.Login.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.SendLogout = channel.unary_unary(
                '/chat.ChatServer/SendLogout',
                request_serializer=chat__extended__pb2.Logout.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.SendDeleteAccount = channel.unary_unary(
                '/chat.ChatServer/SendDeleteAccount',
                request_serializer=chat__extended__pb2.DeleteAccount.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/chat.ChatServer/SendMessage',
                request_serializer=chat__extended__pb2.Message.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.SendGetMessages = channel.unary_unary(
                '/chat.ChatServer/SendGetMessages',
                request_serializer=chat__extended__pb2.GetMessages.SerializeToString,
                response_deserializer=chat__extended__pb2.MessageList.FromString,
                _registered_method=True)
        self.SendGetUndelivered = channel.unary_unary(
                '/chat.ChatServer/SendGetUndelivered',
                request_serializer=chat__extended__pb2.GetUndelivered.SerializeToString,
                response_deserializer=chat__extended__pb2.MessageList.FromString,
                _registered_method=True)
        self.SendDeleteMessages = channel.unary_unary(
                '/chat.ChatServer/SendDeleteMessages',
                request_serializer=chat__extended__pb2.DeleteMessages.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.SendListAccounts = channel.unary_unary(
                '/chat.ChatServer/SendListAccounts',
                request_serializer=chat__extended__pb2.ListAccounts.SerializeToString,
                response_deserializer=chat__extended__pb2.UserList.FromString,
                _registered_method=True)
        self.SendHeartbeat = channel.unary_unary(
                '/chat.ChatServer/SendHeartbeat',
                request_serializer=chat__extended__pb2.Heartbeat.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.SendSyncState = channel.unary_unary(
                '/chat.ChatServer/SendSyncState',
                request_serializer=chat__extended__pb2.SyncState.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.JoinCluster = channel.unary_unary(
                '/chat.ChatServer/JoinCluster',
                request_serializer=chat__extended__pb2.JoinRequest.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)
        self.UpdateCluster = channel.unary_unary(
                '/chat.ChatServer/UpdateCluster',
                request_serializer=chat__extended__pb2.ClusterUpdate.SerializeToString,
                response_deserializer=chat__extended__pb2.Reply.FromString,
                _registered_method=True)


class ChatServerServicer(object):
    """Extended chat service definition for fault-tolerant operation
    """

    def ChatStream(self, request_iterator, context):
        """Original chat service RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendCreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendLogout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendDeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendGetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendGetUndelivered(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendDeleteMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendListAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendHeartbeat(self, request, context):
        """New replication and fault tolerance RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendSyncState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChatStream': grpc.stream_stream_rpc_method_handler(
                    servicer.ChatStream,
                    request_deserializer=chat__extended__pb2.Id.FromString,
                    response_serializer=chat__extended__pb2.Message.SerializeToString,
            ),
            'SendCreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCreateAccount,
                    request_deserializer=chat__extended__pb2.CreateAccount.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'SendLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.SendLogin,
                    request_deserializer=chat__extended__pb2.Login.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'SendLogout': grpc.unary_unary_rpc_method_handler(
                    servicer.SendLogout,
                    request_deserializer=chat__extended__pb2.Logout.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'SendDeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.SendDeleteAccount,
                    request_deserializer=chat__extended__pb2.DeleteAccount.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chat__extended__pb2.Message.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'SendGetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.SendGetMessages,
                    request_deserializer=chat__extended__pb2.GetMessages.FromString,
                    response_serializer=chat__extended__pb2.MessageList.SerializeToString,
            ),
            'SendGetUndelivered': grpc.unary_unary_rpc_method_handler(
                    servicer.SendGetUndelivered,
                    request_deserializer=chat__extended__pb2.GetUndelivered.FromString,
                    response_serializer=chat__extended__pb2.MessageList.SerializeToString,
            ),
            'SendDeleteMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.SendDeleteMessages,
                    request_deserializer=chat__extended__pb2.DeleteMessages.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'SendListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.SendListAccounts,
                    request_deserializer=chat__extended__pb2.ListAccounts.FromString,
                    response_serializer=chat__extended__pb2.UserList.SerializeToString,
            ),
            'SendHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.SendHeartbeat,
                    request_deserializer=chat__extended__pb2.Heartbeat.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'SendSyncState': grpc.unary_unary_rpc_method_handler(
                    servicer.SendSyncState,
                    request_deserializer=chat__extended__pb2.SyncState.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'JoinCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinCluster,
                    request_deserializer=chat__extended__pb2.JoinRequest.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
            'UpdateCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCluster,
                    request_deserializer=chat__extended__pb2.ClusterUpdate.FromString,
                    response_serializer=chat__extended__pb2.Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatServer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatServer(object):
    """Extended chat service definition for fault-tolerant operation
    """

    @staticmethod
    def ChatStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/chat.ChatServer/ChatStream',
            chat__extended__pb2.Id.SerializeToString,
            chat__extended__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendCreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendCreateAccount',
            chat__extended__pb2.CreateAccount.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendLogin',
            chat__extended__pb2.Login.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendLogout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendLogout',
            chat__extended__pb2.Logout.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendDeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendDeleteAccount',
            chat__extended__pb2.DeleteAccount.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendMessage',
            chat__extended__pb2.Message.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendGetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendGetMessages',
            chat__extended__pb2.GetMessages.SerializeToString,
            chat__extended__pb2.MessageList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendGetUndelivered(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendGetUndelivered',
            chat__extended__pb2.GetUndelivered.SerializeToString,
            chat__extended__pb2.MessageList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendDeleteMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendDeleteMessages',
            chat__extended__pb2.DeleteMessages.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendListAccounts',
            chat__extended__pb2.ListAccounts.SerializeToString,
            chat__extended__pb2.UserList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendHeartbeat',
            chat__extended__pb2.Heartbeat.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendSyncState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/SendSyncState',
            chat__extended__pb2.SyncState.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def JoinCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/JoinCluster',
            chat__extended__pb2.JoinRequest.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatServer/UpdateCluster',
            chat__extended__pb2.ClusterUpdate.SerializeToString,
            chat__extended__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
